{
    "contents" : "#################### Research Questions ####################\n# Research Question 1: Are soccer referees more likely to give red cards to dark skin toned players than light skin toned players?\n# \n# Research Question 2: Are soccer referees from countries high in skin-tone prejudice more likely to award red cards to dark skin toned players?\n\n#################### Package Party ####################\nrequire(ggplot2)\nrequire(plyr)\nrequire(sandwich)\nrequire(msm)\nrequire(MASS)\nrequire(pscl)\nrequire(AER)\nrequire(car)\nrequire(irr)\n\n##################### DATA ####################\ndata = read.csv(\"data.csv\")\n\n##################### Check interrater agreement #################\n# \n# Question:do the two independent coders that rated the skin color of players generally agree?\n\nicc(data[c('rater1','rater2')], model=\"oneway\", type=\"agreement\")\nicc(data[c('rater1','rater2')], model=\"oneway\", type=\"consistency\")\n\n# Strong agreement and consistency between raters\n\n# compute average rating\n\ndata$meanrating = rowMeans(data[c('rater1','rater2')],na.rm=T)\n\n##################### Summarize data by player #################\n\ndata.player = ddply(data,.(playerShort),summarize,\n                    # total red cards\n                    totalReds = sum(redCards),\n                    # total yellow cards\n                    totalYellows = sum(yellowCards),\n                    # total yellow then red cards\n                    totalyellowReds = sum(yellowReds),\n                    \n                    # player skin tone rating\n                    skintone = meanrating[1],\n                    # player height\n                    height = height[1],\n                    # player weight\n                    weight = weight[1],\n                    # player age (their birth year)\n                    age = as.numeric(substr(as.character(birthday[1]),7,10)),\n                    # Total player team wins  \n                    wins = sum(victories),\n                    # Total player team losses\n                    losses = sum(defeats),\n                    # Total player team ties\n                    ties = sum(ties),\n                    # player team win-loss difference\n                    wins.loss = wins-losses,\n                    # Total player goals\n                    goals = sum(goals),\n                    \n                    # player position\n                    position = position[1],\n                    # player club\n                    club = club[1],\n                    # player's league country\n                    country = leagueCountry[1],\n                    # total games played by player\n                    games = sum(games)\n)\n# remove NAs\ndata.player= na.omit(data.player)\n\n#create a trichotomous variable 1-2.5 = light, 3.5-5 = dark, 3 = neither\ndata.player$tonesplit = ifelse(data.player$skintone>3.5,\n                               \"dark\",ifelse(data.player$skintone<3,\"light\",\"neither\"))\n\n# Recode positions to be O for offensive, D for defensive, M for midfield, G for goalie\n# this makes analyzing the output a bit easier, but doesn't imapact effect estimates much\ndata.player$pos = as.character(data.player$position)\ndata.player$pos[data.player$pos %in% \n                  c(\"Left Winger\",\"Center Forward\",\"Right Winger\")] = \"O\"\n\ndata.player$pos[data.player$pos %in% \n                  c(\"Attacking Midfielder\",\"Defensive Midfielder\",\n                    \"Left Midfielder\", \"Right Midfielder\",\n                    \"Center Midfielder\" )] ='M'\n\ndata.player$pos[data.player$pos %in% \n                  c(\"Left Fullback\",\"Center Back\",\"Right Fullback\")]='D'\n\ndata.player$pos[data.player$pos==\"Goalkeeper\"]='G'\n\ndata.player$pos = as.factor(data.player$pos)\n\n# create clean z-scored data set for modelling \ndata.playerz = na.omit(data.frame(cbind(scale(\n  data.player[c(\"skintone\",\"height\",\"weight\",\"age\",\"wins.loss\",\"goals\")]),\n  data.player[c(\"pos\",\"totalReds\",\"tonesplit\",\"games\",\"country\",\"totalYellows\")])))\n\n# set effects coded contrasts for position\ncontrasts(data.playerz$pos) = contr.sum(length(levels(data.playerz$pos)))\n# add names\ncolnames(contrasts(data.playerz$pos)) = levels(data.playerz$pos)[-length(levels(data.playerz$pos))]\n\n# set effects coded contrasts for country\ncontrasts(data.playerz$country) = contr.sum(length(levels(data.playerz$country)))\n# add names\ncolnames(contrasts(data.playerz$country)) = levels(data.playerz$country)[-length(\n  levels(data.playerz$country))]\n\n\n############# Sumarize data by ref #####################\n\n#create a trichotomous variable 1-2.5 = light, 3.5-5 = dark, 3 = neither\ndata$tonesplit = ifelse(data$meanrating>3.5,\n                               \"dark\",ifelse(data$meanrating<3,\"light\",\"neither\"))\n\ndata.ref = ddply(data,.(refNum,tonesplit),summarize,\n                    # total red cards\n                    totalReds = sum(redCards),\n                    # total yellow cards\n                    totalYellows = sum(yellowCards),\n                    # total yellow then red cards\n                    totalyellowReds = sum(yellowReds),\n                    \n                    # IAt\n                    meanIAT = meanIAT[1],\n                    nIAT = nIAT[1],\n                    seIAT = seIAT[1],\n                    # EXP\n                    meanExp = meanExp[1],\n                    nExp = nExp[1],\n                    seExp = seExp[1],\n                    \n                    games = sum(games)\n)\n# remove NAs\ndata.player= na.omit(data.player)\n\n\n",
    "created" : 1400236011541.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4127798981",
    "id" : "358ACCA2",
    "lastKnownWriteTime" : 1400236503,
    "path" : "~/Soccer/DataPrep.R",
    "project_path" : "DataPrep.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "source_on_save" : false,
    "type" : "r_source"
}